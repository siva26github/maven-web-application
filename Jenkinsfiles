pipeline{
    agent any
    tools{
     maven "maven3.9.3"
    }
  parameters {
  choice choices: ['master', 'qa', 'uat'], description: 'choice', name: 'branchname'
}
   stages{
        stage('gitclone'){
        steps{
          hai('STARTED')
         git branch: "${params.branchname}", credentialsId: 'GITHUBCREND', url: 'https://github.com/siva26github/maven-web-application.git'
        }
        }
        stage('mavenbuild'){
        steps{
        sh "mvn clean package"
        }
        }
        stage('dockerbuild'){
        steps{
        sh "docker build -t sivane/mavendecslaparaupst:1 ."
        }
        }
        stage('push image'){
        steps{
         withCredentials([string(credentialsId: 'DOCKER_LOGINN', variable: 'DOCKER_LOGINN')]) {
          sh "docker login -u sivane -p ${DOCKER_LOGINN}"
 }
        sh "docker push sivane/mavendecslaparaupst:1"
        }
        }
        stage('upstream'){
         steps{
         build job: 'maven-freestyle'
        }
       }

      /*  stage('deploy'){
        steps{
        sh "kubectl apply -f mavenwebappdeployment.yaml -n sivans"
        }
        }/*
        }
post {
  success {
    hai('SUCCESSFUL')
  }
  failure {
    hai('FAILED')
  }
}
}
def hai(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary,channel: "myfirstchanel")
}
